{"version":3,"sources":["Utility.js","components/Version/Version.js","components/navbarComponents/ExamplesList/ExamplesList.js","components/navbarComponents/NavPages/NavPages.js","components/Logo/Logo.js","components/navbarComponents/MenuToggler/MenuToggler.js","components/Navbar/Navbar.js","components/FooterColumn/FooterColumn.js","components/Footer/Footer.js","components/PageTemplate/PageTemplate.js","components/SectionHolder/SectionHolder.js","App.js","components/CopyHrefIcon/CopyHrefIcon.js","routes/Changelog.js","routes/Help.js","components/InlineCode/InlineCode.js","routes/PortraitSeries.js","components/ParameterTable/ParameterTable.js","routes/Query.js","routes/PageNotFound.js","components/CodeBlock/CodeBlock.js","components/exampleComponents/Skin/Skin.js","components/exampleComponents/Portrait/Portrait.js","components/FormattedJSONFromRoute/FormattedJSONFromRoute.js","components/exampleComponents/Accessory/Accessory.js","components/exampleComponents/Aliases/Aliases.js","components/exampleComponents/Emote/Emote.js","routes/Examples.js","components/exampleComponents/Character/Character.js","routes/ExamplePage.js","routes/GettingStarted.js","routes/LandingPage/LandingPage.js","index.js"],"names":["Utility","getVersion","a","fetch","res","json","version","Version","useState","setVersion","useEffect","className","ExamplesList","props","toggleSubListVisibilityAndAnimate","setState","visible","state","subList","React","createRef","subExamplePages","id","text","handleMenuTogglerClickContext","Consumer","handleMenuTogglerClick","onClick","map","page","to","Component","NavPages","useContext","Logo","MenuToggler","createContext","Navbar","menuTogglerClicked","setMenuTogglerClicked","menuTogglerClass","setMenuTogglerClass","navbarClass","setNavbarClass","Provider","value","FooterColumn","setClassName","useIntersectionObserver","header","entry","isVisible","isIntersecting","ref","title","children","Footer","href","PageTemplate","SectionHolder","App","pathname","useLocation","rootElem","document","getElementById","gsap","scrollTop","transition","CopyHrefIcon","setText","navigator","clipboard","writeText","window","location","origin","setTimeout","Changelog","changelogData","setChangelogData","then","data","fetchData","Object","entries","reverse","changes","change","toString","HelpPage","InlineCode","PortraitSeries","seriesTableCells","setSeriesTableCells","rel","target","i","series","aliases","join","tableFields","tableContent","documentation","parameters","param","name","type","Array","isArray","subType","length","formatType","description","subDescription","formatDescription","isRequired","ParameterTable","field","Query","PageNotFound","CodeBlock","code","codeBlock","useRef","hljs","highlightElement","current","SkinExamples","PortraitExamples","FormattedJSONFromRoute","output","setOutput","route","JSON","stringify","AccessoryExamples","ROSE_CANE_ROUTE","AliasesExamples","VIO_ALIASES_ROUTE","EmoteExamples","COWBOY_DANCE_ROUTE","CONFUSED_EMOTE_ROUTE","Examples","Skin","Portrait","Accessory","Aliases","Emote","Character","VIO_ROUTE","ExamplePage","examplePage","useParams","charAt","toUpperCase","slice","toLowerCase","GettingStarted","RYUK_ROUTE","axiosExampleCode","LandingPage","ReactDOM","render","index","element","path","Help"],"mappings":"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","file":"static/js/main.a8cb00a7.chunk.js","sourcesContent":["const Utility = {\r\n    getVersion: async () => {\r\n        const res = await fetch(\"/version\");\r\n        const json = await res.json();\r\n        return json?.version;\r\n    }\r\n}\r\n\r\nexport default Utility;","import React, { useState, useEffect } from 'react';\r\nimport Utility from '../../Utility.js';\r\n\r\nfunction Version() {\r\n    const [version, setVersion] = useState(\"0.0.1\");\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const version = await Utility.getVersion();\r\n            if(!version) return;\r\n            setVersion(version);\r\n        })();\r\n    }, []);\r\n\r\n    return (<span className=\"version\" data-testid=\"version\">{version}</span>);\r\n}\r\n\r\nexport default Version;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { handleMenuTogglerClickContext } from '../../Navbar/Navbar';\r\n\r\n\r\nclass ExamplesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.subList = React.createRef();\r\n\r\n        this.state = {\r\n            visible: false\r\n        };\r\n    }\r\n\r\n    toggleSubListVisibilityAndAnimate = () => {\r\n        this.setState({ visible: !this.state.visible });\r\n    }\r\n\r\n    render() {\r\n        const subExamplePages = [\r\n            { id: \"skin\", text: \"Skins\" },\r\n            { id: \"portrait\", text: \"Portraits\" },\r\n            { id: \"accessory\", text: \"Accessories\" },\r\n            { id: \"aliases\", text: \"Aliases\" },\r\n            { id: \"emote\", text: \"Emotes\" },\r\n            { id: \"character\", text: \"Characters\" },\r\n        ];\r\n\r\n\r\n        return (\r\n            <handleMenuTogglerClickContext.Consumer>\r\n                {((handleMenuTogglerClick) => (\r\n                    <li className={(this.state.visible) ? \"examples expanded\" : \"examples\"}>\r\n                        <span className=\"examples\" onClick={this.toggleSubListVisibilityAndAnimate}>Examples</span>\r\n                        <ul className={(this.state.visible) ? \"examples\" : \"examples hidden\"} >\r\n                            {\r\n                                subExamplePages.map((page) => {\r\n                                    return (\r\n                                        <li key={page.id}>\r\n                                            <NavLink onClick={() => handleMenuTogglerClick()} to={`examples/${page.id}`}>{page.text}</NavLink>\r\n                                        </li>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </handleMenuTogglerClickContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExamplesList;","import React, {useContext} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {handleMenuTogglerClickContext} from '../../Navbar/Navbar';\r\nimport ExamplesList from '../ExamplesList/ExamplesList';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction NavPages() {\r\n    const handleMenuTogglerClick = useContext(handleMenuTogglerClickContext);\r\n\r\n    return (\r\n        <ul className=\"articles\">\r\n            <li><NavLink onClick={() => handleMenuTogglerClick()} to=\"/getting-started\">Getting Started</NavLink></li>\r\n            <li><NavLink onClick={() => handleMenuTogglerClick()} to=\"/query\">Query Parameters</NavLink></li>\r\n            <li><NavLink onClick={() => handleMenuTogglerClick()} to=\"/portrait-series\">Portrait Series</NavLink></li>\r\n            <ExamplesList />\r\n            <li><NavLink onClick={() => handleMenuTogglerClick()} to=\"/changelog\">Changelog</NavLink></li>\r\n            <li><NavLink onClick={() => handleMenuTogglerClick()} to=\"/help\">Help</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nNavPages.propTypes = {\r\n    setPage: PropTypes.func\r\n};\r\n\r\nexport default NavPages;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './Logo.css';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <NavLink to=\"/\">\r\n            <div className=\"logo\">\r\n        </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React, { useContext }from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { handleMenuTogglerClickContext} from '../../Navbar/Navbar';\r\nimport './MenuToggler.css';\r\n\r\n\r\nfunction MenuToggler({ className }) {\r\n    const handleMenuTogglerClick = useContext(handleMenuTogglerClickContext);\r\n    return (\r\n        <div\r\n            className={className} onClick={handleMenuTogglerClick}>\r\n            <div className=\"icon\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMenuToggler.propTypes = {\r\n    className: PropTypes.string,\r\n}\r\n\r\nexport default MenuToggler;","import React, { useState } from 'react';\r\nimport Version from '../Version/Version';\r\nimport NavPages from '../navbarComponents/NavPages/NavPages';\r\nimport Logo from '../Logo/Logo';\r\nimport MenuToggler from '../navbarComponents/MenuToggler/MenuToggler';\r\nimport './Navbar.css';\r\n\r\n\r\nexport const handleMenuTogglerClickContext = React.createContext();\r\n\r\n\r\nfunction Navbar() {\r\n    const [menuTogglerClicked, setMenuTogglerClicked] = useState(false);\r\n    const [menuTogglerClass, setMenuTogglerClass] = useState(\"menu-toggler\");\r\n    const [navbarClass, setNavbarClass] = useState(\"navbar\");\r\n\r\n\r\n    const handleMenuTogglerClick = () => {\r\n        setMenuTogglerClicked(!menuTogglerClicked);\r\n        setMenuTogglerClass((menuTogglerClicked) ? \"menu-toggler slide-up\" : \"menu-toggler clicked\");\r\n        setNavbarClass((menuTogglerClicked) ? \"navbar slide-up\" : \"navbar clicked\");\r\n    }\r\n\r\n    return (\r\n        <handleMenuTogglerClickContext.Provider value={handleMenuTogglerClick}>\r\n            <div className={navbarClass}>\r\n                <Logo />\r\n                <NavPages />\r\n                <MenuToggler className={menuTogglerClass} />\r\n                <div className=\"navbar-fotter\">\r\n                    © Identity V API | Version <Version />\r\n                </div>\r\n            </div>\r\n        </handleMenuTogglerClickContext.Provider>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useIntersectionObserver } from 'react-intersection-observer-hook';\r\nimport './FooterColumn.css';\r\n\r\nfunction FooterColumn(props) {\r\n    const [className, setClassName] = useState(\"\");\r\n    const [header, { entry }] = useIntersectionObserver();\r\n\r\n    const isVisible = entry && entry.isIntersecting;\r\n\r\n    useEffect(() => {\r\n        if (isVisible) {\r\n            setClassName(\"scroll-animation\");\r\n        }\r\n    }, [isVisible]);\r\n\r\n    return (\r\n        <div className=\"footer-col\">\r\n            <h3 ref={header} className={className}>{props.title}</h3>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nFooterColumn.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node\r\n}\r\n\r\nexport default FooterColumn;","import React from 'react';\r\nimport FooterColumn from '../FooterColumn/FooterColumn';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <FooterColumn title=\"Topics\">\r\n                        <ul>\r\n                            <ul>\r\n                                <li><Link to=\"/\">Getting Started</Link></li>\r\n                                <li><Link to=\"/query\">Query Parameters</Link></li>\r\n                                <li><Link to=\"/portrait-series\">Portrait Series</Link></li>\r\n                                <li><Link to=\"/examples\">Examples</Link></li>\r\n                                <li><Link to=\"/help\">Help</Link></li>\r\n                            </ul>\r\n                        </ul>\r\n                    </FooterColumn>\r\n                    <FooterColumn title=\"Changelog\">\r\n                        <ul>\r\n                            <li><Link to=\"/changelog\">See Changelog</Link></li>\r\n                        </ul>\r\n                    </FooterColumn>\r\n                    <FooterColumn title=\"Community\">\r\n                        <ul>\r\n                            <li><a href=\"https://discord.gg/f5absw6Kcn\">Discord</a></li>\r\n                        </ul>\r\n                    </FooterColumn>\r\n                    <FooterColumn title=\"Contribute\">\r\n                        <ul>\r\n                            <li><a href=\"https://github.com/MohiMad/IdentityV-Costume-API\">Open Source Repository</a></li>\r\n                        </ul>\r\n                    </FooterColumn>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Footer from '../Footer/Footer';\r\n\r\nfunction PageTemplate(props) {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            {props.children}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PageTemplate;","import React from 'react';\r\nimport './SectionHolder.css';\r\n\r\nfunction SectionHolder(props) {\r\n    return (\r\n        <div className=\"section-holder\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionHolder;","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { gsap } from 'gsap';\r\nimport PageTemplate from './components/PageTemplate/PageTemplate';\r\nimport SectionHolder from './components/SectionHolder/SectionHolder';\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        const rootElem = document.getElementById(\"root\");\r\n\r\n        gsap.to(rootElem, {\r\n            scrollTop: 0,\r\n            transition: 50\r\n        })\r\n\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <PageTemplate>\r\n            <SectionHolder>\r\n                <Outlet />\r\n            </SectionHolder>\r\n        </PageTemplate>\r\n    );\r\n}\r\n\r\nexport default App; ","import React, { useState } from 'react';\r\nimport './CopyHrefIcon.css';\r\n\r\nfunction CopyHrefIcon(props) {\r\n    const [text, setText] = useState(\"Copy to Clipboard\");\r\n\r\n    function copyHrefToClipBoardAndChangeState() {\r\n        setText(\"Copied!\");\r\n        navigator.clipboard.writeText((props.value) ? `${window.location.origin}/${props.value}` : window.location.href);\r\n\r\n        setTimeout(() => {\r\n            setText(\"Copy to Clipboard!\");\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <i className=\"fas fa-link\" onClick={copyHrefToClipBoardAndChangeState} data-text={text} data-testid=\"copy-href-icon\" />\r\n    );\r\n}\r\n\r\nexport default CopyHrefIcon;","import React, { useState, useEffect } from 'react';\r\nimport CopyHrefIcon from '../components/CopyHrefIcon/CopyHrefIcon';\r\n\r\nfunction Changelog(props) {\r\n    const [changelogData, setChangelogData] = useState(\r\n        {\r\n            \"1.0.2\": [\r\n                \"Initial Release\",\r\n                \"[Added] First features - Retreiving costume image and name\",\r\n                \"[Added] Documentation page.\"\r\n            ],\r\n            \"1.0.4\": [\r\n                \"[Improved] The way the API handles requests, using parameters instead of query strings\",\r\n                \"[Added] /Portrait route\",\r\n                \"[Added] /Aliases route\",\r\n                \"[Improved] Scraping the fandom to adapt to multiple types of pages\",\r\n                \"[Added] More fields to /Skin route output\"\r\n            ],\r\n            \"1.0.6\": [\r\n                \"[Moved] All the endpoints to /api\",\r\n                \"[Added] /Emote route.\",\r\n                \"[Improved] The UI for the documentation.\"\r\n            ]\r\n        });\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            fetch(\"/public/json/changelog.json\")\r\n                .then((res) => res?.json?.())\r\n                .then((data) => {\r\n                    if (!data) return;\r\n\r\n                    setChangelogData(data)\r\n                });\r\n        }\r\n\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <section id=\"change-log\">\r\n            <h1><CopyHrefIcon value=\"changelog\" />Changelog</h1>\r\n            <ul>\r\n                {Object.entries(changelogData).reverse().map(([version, changes]) => {\r\n                    return (\r\n                        <li key={version.toString()}>\r\n                            {version}\r\n                            <ul>\r\n                                {changes.map((change) => {\r\n                                    return (<li key={change.toString()}>{change}</li>)\r\n                                })}\r\n                            </ul>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Changelog;","import React from 'react';\r\n\r\nfunction HelpPage(props) {\r\n    return (\r\n        <section id=\"help\">\r\n            <h1>Seeking help?</h1>\r\n            <h3>Join our <a className=\"hyperlink\" href=\"https://discord.com/invite/f5absw6Kcn\">Discord server</a>!</h3>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default HelpPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './InlineCode.css';\r\n\r\nfunction InlineCode(props) {\r\n    return (<span className=\"code\">{props.children}</span>);\r\n}\r\n\r\nInlineCode.propTypes = {\r\n    text: PropTypes.string,\r\n}\r\n\r\nexport default InlineCode;","import React, { useState, useEffect } from 'react';\r\nimport InlineCode from '../components/InlineCode/InlineCode';\r\nimport CopyHrefIcon from '../components/CopyHrefIcon/CopyHrefIcon';\r\n\r\nfunction PortraitSeries() {\r\n    const [seriesTableCells, setSeriesTableCells] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const res = await fetch(\"/api/aliases/portraits\")\r\n            if (!res) return;\r\n\r\n            const data = await res.json();\r\n\r\n\r\n            setSeriesTableCells(data);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n                <section id=\"portrait-series\">\r\n                    <h1><CopyHrefIcon />Possible Portrait Series</h1>\r\n                    <h4>This section is dedicated to the /api/portrait endpoint where it uses a <InlineCode>:series</InlineCode> parameter. This parameter is explained in this section.</h4>\r\n                    <p>Portrait series are groups that consists of non-speacial portraits. They're all summed up in one page in the Identity V Fandom,\r\n                        see the <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Colorful_Memory\" rel=\"noreferrer\" target=\"_blank\">colorful memory series'</a> page for reference.\r\n                    </p>\r\n                    <p>Note that the API is flexible with the :series parameter, meaning that you don't have to write it the way the fandom requires you to.\r\n                        For instance, using \"Black_and_white\" is enough instead of \"Black-and-White_(Portrait)\"</p>\r\n                    <h3>The table below includes some of the Portrait Series in the IdentityV Fandom and their corresponding valid aliases for the API.</h3>\r\n                    <div className=\"table-holder\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Series</th>\r\n                                    <th>Valid API Aliases</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    Object.entries(seriesTableCells).map(([series, aliases], i) => {\r\n                                        return (\r\n                                            <tr key={i}>\r\n                                                <td>{series}</td>\r\n                                                <td>{aliases.join(\", \")}</td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </section>\r\n    );\r\n}\r\n\r\nexport default PortraitSeries;","import React from 'react';\r\nimport documentation from '../../documentation.json';\r\nimport InlineCode from '../InlineCode/InlineCode';\r\nimport './ParameterTable.css';\r\n\r\nconst tableFields = [\"Parameter\", \"Type\", \"Description\", \"Required\"];\r\n\r\nfunction formatType(type) {\r\n    if (Array.isArray(type)) {\r\n        return type.map((subType, i) => {\r\n            return (\r\n                <div key={i} className=\"multi-description-holder\">\r\n                    <InlineCode>{subType}</InlineCode>\r\n                    {(i !== type.length - 1) ? (<br />) : \"\"}\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    return (<InlineCode>{type}</InlineCode>);\r\n}\r\n\r\nfunction formatDescription(description) {\r\n    if (Array.isArray(description)) {\r\n        return description.map((subDescription, i) => {\r\n            return (<div key={i} className=\"multi-description-holder\">\r\n                <InlineCode>{subDescription.name} - {subDescription.description}</InlineCode>\r\n                <br />\r\n            </div>);\r\n        });\r\n    }\r\n\r\n    return description;\r\n}\r\n\r\n\r\nconst tableContent = documentation.parameters.map((param, i) => {\r\n    const name = param.name;\r\n    const type = formatType(param.type);\r\n    const description = formatDescription(param.description);\r\n\r\n    return (\r\n        <tr key={i}>\r\n            <td>{name}</td>\r\n            <td>{type}</td>\r\n            <td className=\"description\">{description}</td>\r\n            <td>{(param.isRequired) ? \"Required\" : \"Optional\"}</td>\r\n        </tr>\r\n    )\r\n});\r\n\r\nfunction ParameterTable() {\r\n    return (\r\n        <div className=\"table-holder\">\r\n            <table className=\"parameter-table\">\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                            tableFields.map((field, i) => (<th key={i}>{field}</th>))\r\n                        }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableContent}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParameterTable;","import React from 'react';\r\nimport InlineCode from '../components/InlineCode/InlineCode';\r\nimport CopyHrefIcon from '../components/CopyHrefIcon/CopyHrefIcon';\r\nimport ParameterTable from '../components/ParameterTable/ParameterTable';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Query() {\r\n    return (\r\n        <section id=\"query\">\r\n            <h1><CopyHrefIcon />Query Parameters</h1>\r\n            <p>The <InlineCode>/api</InlineCode> route will return a JSON object with different properties depending on the\r\n                parameters. More detailed properties for each parameter can be found in the <Link className=\"hyperlink\" to=\"/examples\">examples</Link> page.</p>\r\n            <ParameterTable />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Query;","import React from 'react';\r\n\r\nfunction PageNotFound(props) {\r\n    return (\r\n        <h1>Page Not Found!</h1>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import React, { useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport hljs from 'highlight.js/lib/common';\r\nimport './CodeBlock.css';\r\n\r\n\r\nfunction CodeBlock({ className, code }) {\r\n    const codeBlock = useRef();\r\n    \r\n    useEffect(() => {\r\n        hljs.highlightElement(codeBlock.current);\r\n    }, [code]);\r\n\r\n    return (\r\n        <pre>\r\n            <code data-testid=\"code-block\" className={className} ref={codeBlock}>\r\n                {code}\r\n            </code>\r\n        </pre>\r\n    );\r\n}\r\n\r\nCodeBlock.propTypes = {\r\n    className: PropTypes.string,\r\n    code: PropTypes.string\r\n};\r\n\r\nexport default CodeBlock;","import React from 'react';\r\nimport InlineCode from '../../InlineCode/InlineCode';\r\nimport CodeBlock from '../../CodeBlock/CodeBlock';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\n\r\nfunction SkinExamples() {\r\n    const ryukData = `{\r\n    \"status\": 200,\r\n    \"name\": \"Ryuk\",\r\n    \"price\": \"N/A\",\r\n    \"description\": \"Ryuk's Costume\",\r\n    \"wearer\": \"Evil Reptilian\",\r\n    \"essence\": \"Death Note Crossover & Season 16 Essence 2\",\r\n    \"rarity\": \"S-Tier (Gold)\",\r\n    \"link\": \"https://static.wikia.nocookie.net/id5/images/b/bd/Ryuk.png\"\r\n}`;\r\n\r\n    const abyssData = `{\r\n    \"status\": 200,\r\n    \"name\": \"\\\\\"Abyss\\\\\"\",\r\n    \"price\": \"3 Mysterious S Costume Fragment\",\r\n    \"description\": \"There is a thin line between good and evil. If you see \\\\\"Me\\\\\" when you open your eyes, then welcome to the deepest depths of evil.\",\r\n    \"wearer\": \"\\\\\"Nightmare\\\\\"\",\r\n    \"essence\": \"Time of Reunion & Season 18 Essence 3 & Season 19 Essence 1\",\r\n    \"rarity\": \"S-Tier (Gold)\",\r\n    \"link\": \"https://static.wikia.nocookie.net/id5/images/8/88/%22Abyss%22.png\"\r\n}`;\r\n\r\n    return (\r\n        <div id=\"examples-skin\">\r\n            <h2><CopyHrefIcon value=\"examples/skin\" />Skin Examples</h2>\r\n            <p>To get accurate skin data, use the <InlineCode>/api/skin</InlineCode> route.</p>\r\n            <h3>Retreive data for Luchino's <a className=\"hyperlink\" href=\"https://id5.fandom.com/ryuk\" rel=\"noreferrer\" target=\"_blank\">Ryuk</a> costume:</h3>\r\n            <CodeBlock className=\"language json\" code={ryukData} />\r\n            <p>Visit <a className=\"hyperlink\" href=\"/api/skin/Ryuk\" rel=\"noreferrer\" target=\"_blank\">/api/skin/Ryuk</a> for raw version.</p>\r\n            <h3>The API adapts to all rarities of costumes and is updated as long as Identity V Fandom is still up to date.</h3>\r\n            <p>Getting <a className=\"hyperlink\" href={\"https://id5.fandom.com/\\\"Abyss\\\"\"} rel=\"noreferrer\" target=\"_blank\">Nightmare's S</a> costume: </p>\r\n            <CodeBlock className=\"language json\" code={abyssData} />\r\n            <p>Raw version at <a className=\"hyperlink\" href={\"/api/skin/\\\"Abyss\\\"\"} rel=\"noreferrer\" target=\"_blank\">/api/skin/\"Abyss\"</a>.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SkinExamples;","import React from 'react';\r\nimport InlineCode from '../../InlineCode/InlineCode';\r\nimport CodeBlock from '../../CodeBlock/CodeBlock';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction PortraitExamples() {\r\n    const cowboyPortraitData = `{\r\n    \"status\": 200,\r\n    \"name\": \"Colorful Memory Cowboy\",\r\n    \"price\": \"N/A\",\r\n    \"description\": \"Colorful Memory Portraits Remember this moment and cherish these times in your heart.\",\r\n    \"essence\": \"Rank Treasure & Memory Spheres\",\r\n    \"link\": \"https://static.wikia.nocookie.net/id5/images/8/8d/ColorfulMemoryCowboy.png\"\r\n}`;\r\n\r\n    return (\r\n        <div id=\"examples-accessory\">\r\n            <h2><CopyHrefIcon value=\"examples/accessory\" />Portrait Examples</h2>\r\n            <p>Use the <InlineCode>/api/portrait</InlineCode> endpoint for accurate portrait data. Check <Link className=\"hyperlink\" to=\"../../portrait-series\">Portrait Series</Link> page to see the existing portrait series and their aliases.</p>\r\n            <h3>Retreive data for <a className=\"hyperlink\" href=\"https://id5.fandom.com/Colorful_Memory\" rel=\"noreferrer\" target=\"_blank\">Cowboy's Colorful Memory</a> portrait:</h3>\r\n            <CodeBlock className=\"language json\" code={cowboyPortraitData} />\r\n            <p>Visit <a className=\"hyperlink\" href=\"/api/portrait/colorful_memory/cowboy\" rel=\"noreferrer\" target=\"_blank\">/api/portrait/Colorful_Memory/Cowboy</a> for raw version.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PortraitExamples;","import React,{ useState, useEffect } from 'react';\r\nimport CodeBlock from '../CodeBlock/CodeBlock';\r\n\r\nfunction FormattedJSONFromRoute(props) {\r\n    const [output, setOutput] = useState(\"{}\");\r\n\r\n    useEffect(() => {\r\n        fetch(props.route).then((res) => res.json?.())\r\n        .then(data => {\r\n            if (!data) return;\r\n\r\n            setOutput(JSON.stringify(data, null, 4));\r\n        })\r\n    }, [props.route]);\r\n\r\n    return (\r\n        <CodeBlock className=\"language json\" code={output} />\r\n    );\r\n}\r\n\r\nexport default FormattedJSONFromRoute;","import React from 'react';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\nimport InlineCode from '../../InlineCode/InlineCode';\r\nimport FormattedJSONFromRoute from '../../FormattedJSONFromRoute/FormattedJSONFromRoute';\r\n\r\nfunction AccessoryExamples() {\r\n    const ROSE_CANE_ROUTE = \"/api/accessory/Rose_Cane\";\r\n\r\n    return (\r\n        <div id=\"examples-accessory\">\r\n            <h2><CopyHrefIcon value=\"examples/accessory\" />Accessory Examples</h2>\r\n            <p>The <InlineCode>/api/accessory</InlineCode> only has one parameter, namenly <InlineCode>:name</InlineCode> which is the name of the accessory.</p>\r\n            <h3>Retreive data for the Ripper's <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Rose_Cane\" rel=\"noreferrer\" target=\"_blank\">Rose Cane</a>.</h3>\r\n            <p>As mentioned, the accessory route has one parameter which is the name, in this case, <InlineCode>:name</InlineCode> is <a className=\"hyperlink\" href={ROSE_CANE_ROUTE} rel=\"noreferrer\" target=\"_blank\">Rose_Cane</a>.</p>\r\n            <FormattedJSONFromRoute route={ROSE_CANE_ROUTE}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccessoryExamples;","import React from 'react';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\nimport FormattedJSONFromRoute from '../../FormattedJSONFromRoute/FormattedJSONFromRoute';\r\n\r\nfunction AliasesExamples(props) {\r\n    const VIO_ALIASES_ROUTE = \"/api/aliases/hunters/violinist\";\r\n\r\n    return (\r\n        <div id=\"examples-aliases\">\r\n            <h2><CopyHrefIcon value=\"examples/aliases\"/>Aliases Examples</h2>\r\n            <h3>Getting the available aliases for Antonio:</h3>\r\n            <p>The data below is retreived from <a className=\"hyperlink\" href={VIO_ALIASES_ROUTE}>{VIO_ALIASES_ROUTE}</a>.</p>\r\n            <FormattedJSONFromRoute route={VIO_ALIASES_ROUTE} />\r\n            <h3>Getting all characters' alisases: visit <a className=\"hyperlink\" href=\"/api/aliases\" rel=\"noreferrer\" target=\"_blank\">/api/aliases</a>.</h3>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AliasesExamples;","import React from 'react';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\nimport InlineCode from '../../InlineCode/InlineCode';\r\nimport FormattedJSONFromRoute from '../../FormattedJSONFromRoute/FormattedJSONFromRoute';\r\n\r\nfunction EmoteExamples(props) {\r\n    const COWBOY_DANCE_ROUTE = \"/api/emote/dance/cowboy\";\r\n    const CONFUSED_EMOTE_ROUTE =\"/api/emote/confused\";\r\n\r\n    return (\r\n        <div id=\"examples-emote\">\r\n            <h2><CopyHrefIcon value=\"examples/emote\"/>Emote Examples</h2>\r\n            <p>Emotes are separated into two different groups, ones with series, and ones without. \r\n                Take <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Dance\" rel=\"noreferrer\" target=\"_blank\">Dance</a> and <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Confused\">Confused</a> emotes as an example. \r\n                Dance has different animations depending on the character, \r\n                while confused is generalised for male and female characters. Not to mention that the image/icon for the Dance emote is different for each factor (hunters and survivors).</p>\r\n            <h3>Get information for an emote that belongs to a series:</h3>\r\n            <p>Since <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Dance\" rel=\"noreferrer\" target=\"_blank\">Dance</a> was mentioned, we'll retreive Cowboy's using <a className=\"hyperlink\" href={COWBOY_DANCE_ROUTE} rel=\"noreferrer\" target=\"_blank\">{COWBOY_DANCE_ROUTE}</a>.</p>\r\n            <FormattedJSONFromRoute route={COWBOY_DANCE_ROUTE}/>\r\n            <p>Note how the output has a new property: <InlineCode>preview</InlineCode>, if you visit its link, it'll display the dance animation.</p>\r\n            <br/>\r\n            <h3>Getting a general emote:</h3>\r\n            <p>We'll use the <a className=\"hyperlink\" href=\"https://id5.fandom.com/wiki/Confused\">Confused</a> emote as an example. The corresponding route to retreive the data would be <a className=\"hyperlink\" href={CONFUSED_EMOTE_ROUTE} rel=\"noreferrer\" target=\"_blank\">{CONFUSED_EMOTE_ROUTE}</a>. Note that the <InlineCode>:name</InlineCode> parameter is emitted in this example because the data returned is going to be the same regardless of the character.</p>\r\n            <FormattedJSONFromRoute route={CONFUSED_EMOTE_ROUTE}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmoteExamples;","import React from 'react';\r\nimport CopyHrefIcon from '../components/CopyHrefIcon/CopyHrefIcon';\r\nimport SkinExamples from '../components/exampleComponents/Skin/Skin';\r\nimport PortraitExamples from '../components/exampleComponents/Portrait/Portrait';\r\nimport AccessoryExamples from '../components/exampleComponents/Accessory/Accessory';\r\nimport AliasesExamples from '../components/exampleComponents/Aliases/Aliases';\r\nimport EmoteExamples from '../components/exampleComponents/Emote/Emote';\r\n\r\nfunction Examples() {\r\n    return (\r\n        <section id=\"examples\">\r\n            <h1><CopyHrefIcon value=\"examples\" />Examples</h1>\r\n            <SkinExamples />\r\n            <PortraitExamples />\r\n            <AccessoryExamples />\r\n            <AliasesExamples />\r\n            <EmoteExamples />\r\n        </section>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Examples;","import React from 'react';\r\nimport CopyHrefIcon from '../../CopyHrefIcon/CopyHrefIcon';\r\nimport InlineCode from '../../InlineCode/InlineCode';\r\nimport FormattedJSONFromRoute from '../../FormattedJSONFromRoute/FormattedJSONFromRoute';\r\n\r\n\r\nfunction Character(props) {\r\n    const VIO_ROUTE = \"/api/character/violinist\";\r\n    \r\n    return (\r\n        <div id=\"examples-character\">\r\n            <h2><CopyHrefIcon value=\"examples/character\" />Character Example</h2>\r\n            <h3>Getting data for Antonio:</h3>\r\n            <p>The data below is retreived from <a className=\"hyperlink\" href={VIO_ROUTE}>{VIO_ROUTE}</a>.</p>\r\n            <FormattedJSONFromRoute route={VIO_ROUTE}/>\r\n            <p>Note that the routes <InlineCode>api/survivor</InlineCode> and <InlineCode>api/hunter</InlineCode> exist but will redirect you to <InlineCode>api/character</InlineCode> since the output for survivors is almost identical to hunters.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Character;","import React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Skin from '../components/exampleComponents/Skin/Skin';\r\nimport Accessory from '../components/exampleComponents/Accessory/Accessory';\r\nimport Aliases from '../components/exampleComponents/Aliases/Aliases';\r\nimport Emote from '../components/exampleComponents/Emote/Emote';\r\nimport Portrait from '../components/exampleComponents/Portrait/Portrait';\r\nimport Character from '../components/exampleComponents/Character/Character';\r\n\r\n\r\nfunction ExamplePage() {\r\n    const { examplePage } = useParams();\r\n    const page = (examplePage.charAt(0).toUpperCase() + examplePage.slice(1).toLowerCase());\r\n    const components = {Skin, Accessory, Aliases, Emote, Portrait, Character};\r\n    const Component = components[page];\r\n    \r\n    if(!Component) return false;\r\n\r\n    return (\r\n        <Component />\r\n    );\r\n}\r\n\r\nexport default ExamplePage;","import React from 'react';\r\nimport CodeBlock from '../components/CodeBlock/CodeBlock';\r\nimport CopyHrefIcon from '../components/CopyHrefIcon/CopyHrefIcon';\r\n/* import WarningBadge from '../components/WarningBadge/WarningBadge';\r\nimport InlineCode from '../components/InlineCode/InlineCode'; */\r\nimport FormattedJSONFromRoute from '../components/FormattedJSONFromRoute/FormattedJSONFromRoute';\r\n\r\nfunction GettingStarted(props) {\r\n    const RYUK_ROUTE = \"api/skin/Ryuk\";\r\n    const axiosExampleCode = `\r\nconst axios = require(\"axios\");\r\n// Get data from https://id5.fandom.com/wiki/Ryuk\r\naxios.get(\"https://idvapi.herokuapp.com/${RYUK_ROUTE}\").then(function (response) {\r\n        // handle success\r\n        console.log(response.data);\r\n\r\n}).catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n});`;\r\n\r\n    return (\r\n        <section id=\"getting-started\">\r\n            {/* <WarningBadge content={\r\n                (\r\n                <p>The website's domain has been moved from <InlineCode>https://idv-costume.herokuapp.com/</InlineCode> to <InlineCode>https://idvapi.herokuapp.com/</InlineCode></p>\r\n                )} /> */}\r\n\r\n            <h1><CopyHrefIcon value=\"getting-started\" />Getting Started</h1>\r\n            <p>To retreive information uisng the API, use the query parameters to specify what type of data you want.\r\n                The data returned is formatted in JSON.</p>\r\n            <div className=\"nodejs-example\">\r\n                <h2>Example using Node.JS and axios</h2>\r\n                <p>Any web-scraping 3rd party package works, in this example, we're using <a className=\"hyperlink\" href=\"https://www.npmjs.com/package/axios\">axios</a>\r\n                </p>\r\n                <CodeBlock className=\"language js\" code={axiosExampleCode} />\r\n                <h4>Returns a JSON object if succeed:</h4>\r\n                <FormattedJSONFromRoute route={RYUK_ROUTE} />\r\n                <p>Data output based on the query is returned to the URL itself, e.g <a className=\"hyperlink\" href={RYUK_ROUTE}\r\n                    rel=\"noreferrer\" target=\"_blank\">{RYUK_ROUTE}</a>.</p>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default GettingStarted;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './LandingPage.css';\r\n\r\nfunction LandingPage(props) {\r\n    return (\r\n        <div className=\"landing-page-container\">\r\n            <div className=\"hero-image\">\r\n                <h1>Identity <span className=\"sharpen-red\">V</span> API</h1>\r\n                <p>\r\n                    Get data and images from <a className=\"hyperlink\" href=\"https://id5.fandom.com/\" rel=\"noreferrer\" target=\"_blank\">Identity V Fandom</a> in JSON effortlessly.</p>\r\n                    <NavLink className=\"getStarted\" to=\"/getting-started\">Get Started</NavLink>            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport Changelog from './routes/Changelog';\r\nimport Help from './routes/Help';\r\nimport PortraitSeries from './routes/PortraitSeries';\r\nimport Query from './routes/Query';\r\nimport PageNotFound from './routes/PageNotFound';\r\nimport Examples from './routes/Examples';\r\nimport ExamplePage from './routes/ExamplePage';\r\nimport GettingStarted from './routes/GettingStarted';\r\nimport LandingPage from './routes/LandingPage/LandingPage';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      <Route index element={<LandingPage />} />\r\n      <Route path=\"/\" element={<App />}>\r\n        <Route path=\"getting-started\" element={<GettingStarted />} />\r\n        <Route path=\"query\" element={<Query />} />\r\n        <Route path=\"portrait-series\" element={<PortraitSeries />} />\r\n        <Route path=\"examples\">\r\n          <Route index element={<Examples />} />\r\n          <Route path=\":examplePage\" element={<ExamplePage />} />\r\n        </Route>\r\n        <Route path=\"changelog\" element={<Changelog />} />\r\n        <Route path=\"help\" element={<Help />} />\r\n        <Route\r\n          path=\"*\"\r\n          element={<PageNotFound />}\r\n        />\r\n      </Route>\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}